version: 2

references:
  cf-install: &cf-install
    run:
      name: Install Cloud Foundry CLI
      command: |
        curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
        sudo dpkg -i cf-cli_amd64.deb
        cf install-plugin https://github.com/govau/autopilot/releases/download/0.0.5-venapp/autopilot-linux -f
        cf install-plugin https://github.com/govau/cf-run-and-wait/releases/download/0.1/run-and-wait.linux64 -f
        cf -v
  update-libs: &update-libs
    run:
      name: Update Python dependency libraries
      command: |
        sudo apt update
        sudo apt purge -y libssl-dev
        sudo apt install -y libssl1.0-dev
  postgres-install: &postgres-install
    run:
      name: Installing PostgresSql
      command: |
        sudo apt install postgresql-9.6
        sudo service postgresql start
        sudo su - postgres -c "echo \"create user circleci with password 'circleci';\" | psql"
        sudo su - postgres -c "echo \"alter user circleci with superuser;\" | psql"
        sudo su - postgres -c "echo \"create database circleci;\" | psql"
  master-branch-only: &master-branch-only
    filters:
      tags:
        only: /[0-9]+(\.[0-9]+)*/
      branches:
        only: master
  release-tag-only: &release-tag-only
    filters:
      tags:
        only: /[0-9]+(\.[0-9]+)*/
      branches:
        ignore: /.*/
  all-branches-and-filters: &all-branches-and-filters
    filters:
      tags:
        only: /[0-9]+(\.[0-9]+)*/
      branches:
        only: /.*/
      

jobs:
  setup:
    docker:
      - image: circleci/python:2.7.14-stretch
        environment:
          TZ: "/usr/share/zoneinfo/Australia/Sydney"
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - backend
            - frontend
            - .git  # required for test-api step
  build-and-test-api:
    docker:
      - image: circleci/python:2.7.14-stretch
        environment:
          TZ: "/usr/share/zoneinfo/Australia/Sydney"
    steps:
      - *update-libs
      - *postgres-install
      - attach_workspace:
          at: .
      - run:
          name: Installing API Python libraries
          command: |
            cd backend
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: 
          name: Run API Tests
          command: |
            cd backend
            source venv/bin/activate
            ./scripts/run_tests.sh
            git log --pretty=format:'%h' -n 1 > version_label
      - persist_to_workspace:
          root: .
          paths:
            - backend
  deploy-dev-api:
    docker:
      - image: circleci/python:2.7.14-stretch
        environment:
          TZ: "/usr/share/zoneinfo/Australia/Sydney"
    steps:
      - *cf-install
      - *update-libs
      - *postgres-install
      - attach_workspace:
          at: .
      - run:
          name: Deploying API to Staging
          command: |
            cd backend
            source venv/bin/activate
            cf login -a https://api.system.y.cld.gov.au -o dta -s marketplace -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
            python ./db_tasks.py v2_test_migration $CIRCLE_BUILD_NUM api.system.y.cld.gov.au $CF_USER_STAGING $CF_PASSWORD_STAGING orams-dev-shared
            cf zero-downtime-push orams-dev-api -f manifest.yml --show-app-log
            cf run-and-wait orams-dev-api "python ./db_tasks.py do_migration $CIRCLE_BUILD_NUM"
  deploy-api:
    docker:
      - image: circleci/python:2.7.14-stretch
        environment:
          TZ: "/usr/share/zoneinfo/Australia/Sydney"
    steps:
      - *cf-install
      - *update-libs
      - *postgres-install
      - attach_workspace:
          at: .
      - run:
          name: Deploying API to Prod
          command: |
            cd backend
            source venv/bin/activate
            cf login -a https://api.system.b.cld.gov.au -o dta -s marketplace -u $CF_USER_PROD -p $CF_PASSWORD_PROD
            python ./db_tasks.py v2_test_migration $CIRCLE_BUILD_NUM api.system.b.cld.gov.au $CF_USER_PROD $CF_PASSWORD_PROD orams-96-prod
            cf zero-downtime-push orams-api -f manifest-prod.yml --show-app-log
            cf run-and-wait orams-api "python ./db_tasks.py do_migration $CIRCLE_BUILD_NUM"
            ./scripts/ci-notify.sh            
  build-and-test-frontend:
    docker:
      - image: circleci/node:8.11.1
        environment:
          TZ: "/usr/share/zoneinfo/Australia/Sydney"
    steps:
      - attach_workspace:
          at: .
      - run: 
          name: Building Front End
          command: | 
            cd frontend
            find . -name "node_modules" -exec rm -rf '{}' + # removing all node_modules/ folder cause circle canâ€™t be trusted with it.
            npm install
            npm run build
      - run: 
          name: Run Front End Tests
          command: |
            cd frontend 
            npm run eslint
            npm test
      - persist_to_workspace:
          root: .
          paths:
            - frontend
  deploy-dev-frontend:
    docker:
      - image: circleci/node:8.11.1
        environment:
          TZ: "/usr/share/zoneinfo/Australia/Sydney"
    steps:
      - *cf-install
      - attach_workspace:
          at: .
      - run: 
          name: Deploying Front End to Staging
          command: |
            cd frontend
            cf login -a https://api.system.y.cld.gov.au -o dta -s marketplace -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
            cf zero-downtime-push orams-dev-frontend -f manifest.yml --show-app-log
  deploy-frontend:
    docker:
      - image: circleci/node:8.11.1
        environment:
          TZ: "/usr/share/zoneinfo/Australia/Sydney"
    steps:
      - *cf-install
      - attach_workspace:
          at: .
      - run: 
          name: Deploying Front End to Prod
          command: |
            cd frontend
            cf login -a https://api.system.b.cld.gov.au -o dta -s marketplace -u $CF_USER_PROD -p $CF_PASSWORD_PROD
            cf zero-downtime-push orams-frontend -f manifest-prod.yml --show-app-log
            ./scripts/ci-notify.sh
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - setup:
          <<: *all-branches-and-filters
      - build-and-test-api:
          <<: *all-branches-and-filters
          requires:
            - setup
      - deploy-dev-api:
          <<: *master-branch-only
          requires:
            - build-and-test-api
      - build-and-test-frontend:
          <<: *all-branches-and-filters
          requires:
            - setup
      - deploy-dev-frontend:
          <<: *master-branch-only
          requires:
            - build-and-test-frontend
      - unlock-prod-deploy:
          <<: *release-tag-only
          type: approval
          requires:
            - deploy-dev-api
            - deploy-dev-frontend
      - deploy-api:
          <<: *release-tag-only
          requires:
            - unlock-prod-deploy
      - deploy-frontend:
          <<: *release-tag-only
          requires:
            - unlock-prod-deploy